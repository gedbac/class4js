var class4js=function(global){var class4js={};var TypeException=function(message){this.__name="TypeException";this.__message=message};TypeException.prototype=Object.create(Object.prototype,{name:{get:function(){return this.__name}},message:{get:function(){return this.__message},enumerable:true,configurable:false}});Object.seal(TypeException);Object.seal(TypeException.prototype);class4js.TypeException=TypeException;var TypeBuilder=Object.create(null,{isPrivate:{value:function(name){return/^__([A-Z]|[a-z]|[0-9])*$/g.test(name)},
writable:false,enumerable:true,configurable:false},isProtected:{value:function(name){return/^_([A-Z]|[a-z]|[0-9])*$/g.test(name)},writable:false,enumerable:true,configurable:false},isPublic:{value:function(name){return!TypeBuilder.isPrivate(name)&&!TypeBuilder.isProtected(name)},writable:false,enumerable:true,configurable:false},isValidTypeName:{value:function(name){return/^[A-Z]([A-Z]|[a-z]|[0-9])*$/g.test(name)},writable:false,enumerable:true,configurable:false},isValidConstructorName:{value:function(name){return name==
"__construct__"},writable:false,enumerable:true,configurable:false},isValidName:{value:function(name){return/^(_|__|[a-z])([a-z]|[A-Z]|[0-9])*$/g.test(name)},writable:false,enumerable:true,configurable:false},isValidConstantName:{value:function(name){return/^([A-Z]|[0-9]|_)*$/g.test(name)},writable:false,enumerable:true,configurable:false},addConstructor:{value:function(owner,name,value){if(owner)if(TypeBuilder.isValidConstructorName(name))Object.defineProperty(owner,name,{value:value,writable:false,
enumerable:false,configurable:false});else throw new TypeException("Constructor's name is invalid: '"+name+"'");else throw new TypeException("Constructor's '"+name+"' owner can't be null");},writable:false,enumerable:true,configurable:false},addField:{value:function(owner,name,value){if(owner)if(TypeBuilder.isValidName(name))Object.defineProperty(owner,name,{value:value,writable:false,enumerable:TypeBuilder.isPublic(name),configurable:false});else throw new TypeException("Field's name is invalid: '"+
name+"'");else throw new TypeException("Field's '"+name+"' owner can't be null");},writable:false,enumerable:true,configurable:false},addMethod:{value:function(owner,name,value){if(owner)if(TypeBuilder.isValidName(name))Object.defineProperty(owner,name,{value:value,writable:false,enumerable:TypeBuilder.isPublic(name),configurable:false});else throw new TypeException("Method's name is invalid: '"+name+"'");else throw new TypeException("Method's '"+name+"' owner can't be null");},writable:false,enumerable:true,
configurable:false},addProperty:{value:function(owner,name,getter,setter){if(owner)if(TypeBuilder.isValidName(name))Object.defineProperty(owner,name,{get:getter,set:setter,enumerable:TypeBuilder.isPublic(name),configurable:false});else throw new TypeException("Property's name is invalid: '"+name+"'");else throw new TypeException("Property's '"+name+"' owner can't be null");},writable:false,enumerable:true,configurable:false},addConstant:{value:function(owner,name,value){if(owner)if(TypeBuilder.isValidConstantName(name))Object.defineProperty(owner,
name,{get:function(){return value},enumerable:TypeBuilder.isPublic(name),configurable:false});else throw new TypeException("Constant's name is invalid: '"+name+"'");else throw new TypeException("Constant's '"+name+"' owner can't be null");},writable:false,enumerable:true,configurable:false},isConstructor:{value:function(name){return name=="__construct__"},writable:false,enumerable:true,configurable:false},isMethod:{value:function(value){return typeof value==="function"},writable:false,enumerable:true,
configurable:false},isProperty:{value:function(value){return value["get"]!=null||value["set"]!=null},writable:false,enumerable:true,configurable:false},isConstant:{value:function(name){return/^([A-Z]|[0-9]|_)*$/g.test(name)},writable:false,enumerable:true,configurable:false},forEach:{value:function(properties,callback){if(properties)if(typeof callback==="function"){var names=Object.keys(properties);for(var i=0;i<names.length;i++)callback(names[i],properties[names[i]])}else throw new TypeException("Callback is not function");
},writable:false,enumerable:true,configurable:false}});class4js.TypeBuilder=TypeBuilder;var Class=Object.create(null,{__extensions:{value:[],writable:true,enumerable:false,configurable:false},__initialize:{value:function(prototype,args){if(prototype&&prototype.hasOwnProperty("__construct__"))if(typeof prototype["__construct__"]==="function")prototype["__construct__"].apply(this,args)},writable:false,enumerable:false,configurable:false},__isStatic:{value:function(name){return name=="__static__"},writable:false,
enumerable:false,configurable:false},__addStatic:{value:function(owner,properties){TypeBuilder.forEach(properties,function(name,value){if(TypeBuilder.isMethod(value))TypeBuilder.addMethod(owner,name,value);else if(TypeBuilder.isProperty(value))TypeBuilder.addProperty(owner,name,value["get"],value["set"]);else if(TypeBuilder.isConstant(name))TypeBuilder.addConstant(owner,name,value);else TypeBuilder.addField(owner,name,value)})},writable:false,enumerable:false,configurable:false},__descriptorsAreEqual:{value:function(property,
source,target){var properties=Object.keys(target);for(var i=0;i<properties.length;i++){var name=properties[i];if(name!="writable"&&name!="enumerable"&&name!="configurable")if(name in target)if(!(name in source)||typeof target[name]!==typeof source[name])throw new TypeException("Implementation of the property '"+property+"' is invalid");}},writable:false,enumerable:false,configurable:false},__instanceOf:{value:function(source,target){if(source&&target){for(var property in target)if(!(property in source))throw new TypeException("Class doesn't implemet property: "+
property);else{var sourceDescriptor=Object.getOwnPropertyDescriptor(source,property);var targetDescriptor=Object.getOwnPropertyDescriptor(target,property);Class.__descriptorsAreEqual(property,sourceDescriptor,targetDescriptor)}return true}else throw new TypeException("Source or target is not set");}},create:{value:function(properties,parent,interfaces){var constructor=function(){if(Class.__extensions&&Class.__extensions.length>0)for(var i=0;i<Class.__extensions.length;i++)Class.__extensions[i].call(this);
if(parent)Class.__initialize.call(this,parent.prototype,arguments);Class.__initialize.call(this,Object.getPrototypeOf(this),arguments);Object.seal(this)};if(parent){constructor.prototype=Object.create(parent.prototype);Object.defineProperty(constructor.prototype,"_super",{get:function(){var prototype=Object.getPrototypeOf(this);return Object.getPrototypeOf(prototype)},enumerable:false,configurable:false})}else constructor.prototype=Object.create(Object.prototype);TypeBuilder.forEach(properties,function(name,
value){if(TypeBuilder.isConstructor(name))TypeBuilder.addConstructor(constructor.prototype,name,value);else if(TypeBuilder.isMethod(value))TypeBuilder.addMethod(constructor.prototype,name,value);else if(TypeBuilder.isProperty(value))TypeBuilder.addProperty(constructor.prototype,name,value["get"],value["set"]);else if(TypeBuilder.isConstant(name))TypeBuilder.addConstant(constructor,name,value);else if(Class.__isStatic(name))Class.__addStatic(constructor,value);else TypeBuilder.addField(constructor.prototype,
name,value)});Object.seal(constructor);Object.seal(constructor.prototype);if(interfaces)if(interfaces instanceof Array)for(var i=0;i<interfaces.length;i++)Class.__instanceOf(constructor.prototype,interfaces[i]);else Class.__instanceOf(constructor.prototype,interfaces);return constructor},writable:false,enumerable:true,configurable:false},addExtension:{value:function(extension){if(extension)Class.__extensions.push(extension)},writable:false,enumerable:true,configurable:false}});Object.freeze(Class);
class4js.Class=Class;global.$class=class4js.Class.create;var Interface=Object.create(null,{create:{value:function(properties,parent){var obj;if(parent)obj=Object.create(parent);else obj=Object.create(Object);TypeBuilder.forEach(properties,function(name,value){if(TypeBuilder.isMethod(value))TypeBuilder.addMethod(obj,name,value);else if(TypeBuilder.isProperty(value))TypeBuilder.addProperty(obj,name,value["get"],value["set"]);else throw new TypeException("Member '"+name+"' is invalid");});Object.freeze(obj);
return obj},writable:false,enumerable:true,configurable:false},instanceOf:{value:function(source,target){if(source&&target){for(var property in target)if(!(property in source))return false;return true}else throw new TypeException("Source or target is not set");},writable:false,enumerable:true,configurable:false}});Object.freeze(Interface);class4js.Interface=Interface;global.$interface=class4js.Interface.create;global.$is=class4js.Interface.instanceOf;var ObjectFactory=Object.create(null,{create:{value:function(type,
properties){if(type)if(properties instanceof type)return properties;else{var instance=new type;if(properties){var names=Object.keys(properties);for(var i=0;i<names.length;i++)instance[names[i]]=properties[names[i]]}return instance}else throw new TypeException("Type is not set.");},writable:false,enumerable:true,configurable:false}});class4js.ObjectFactory=ObjectFactory;global.$create=class4js.ObjectFactory.create;return class4js}(window);
